package br.ufes.inf.lprm.scene.examples.aedes;

/*import br.ufes.inf.lprm.scene.base.*;
import br.ufes.inf.lprm.scene.examples.shared.*;*/
//import br.ufes.inf.lprm.scene.model.impl.Situation;

import java.lang.Math;

import java.util.List;

import br.ufes.inf.lprm.scene.model.impl.Situation;
import br.ufes.inf.lprm.scene.util.SituationHelper;
import br.ufes.inf.lprm.situation.annotations.part;
import br.ufes.inf.lprm.situation.model.events.*;

//global java.util.List list;


/*Mosquito Apto a Voar

CondiÃ§Ã£o de ativaÃ§Ã£o: Mosquito nÃ£o deve ter voado durante o dia. Desativa: ApÃ³s mosquito voar.
Mosquito Apto a botar
CondiÃ§Ã£o de ativaÃ§Ã£o: ApÃ³s desativaÃ§Ã£o do â€œapto a voarâ€�. Desativa: ApÃ³s mosquito botar.
Ovos chocando
CondiÃ§Ã£o de ativaÃ§Ã£o: ApÃ³s desativaÃ§Ã£o do â€œapto a botarâ€� Desativa: apÃ³s 20 dias ou atÃ© agente combater.
Mosquito nasce
CondiÃ§Ã£o de ativaÃ§Ã£o: ApÃ³s desativaÃ§Ã£o do â€œovos chocandoâ€� Desativa: ApÃ³s mosquito nascer.

Agente sendo chamado
CondiÃ§Ã£o de ativaÃ§Ã£o: Com a condiÃ§Ã£o â€œovos chocandoâ€� Desativa: ApÃ³s 3 dias.
Agente atuando
CondiÃ§Ã£o de ativaÃ§Ã£o: Com a desativaÃ§Ã£o de â€œagente sendo chamadoâ€� Desativa: ApÃ³s combater 5 casas aleatoriamente.
Chovendo
CondiÃ§Ã£o de ativaÃ§Ã£o: 15 dias apÃ³s Ãºltima execuÃ§Ã£o / inÃ­cio da simulaÃ§Ã£o Desativa: ApÃ³s chover*/


/*declare AedesSituation extends Situation
    transactions: List @part
end

rule "mosquitoLife"
@role(situation)
@type(TemperatureSituation)
    when
       
    then
       SituationHelper.situationDetected(drools);
end*/

/*declare Mosquito
@role(event)
end

rule "mosquitoLife"
@role( situation )
@type(lifeMosquito)
when
        Scenary( $houses: scenary )
        $house: House() from $houses
        $mosq: Mosquito(controlfly==false) from $house.getMosquitos()
        
    then
    SituationHelper.situationDetected(drools);
    end
    
    
    rule "testmosquito"
    when
    Mosquito() over window:time( 10s)
    then
    System.out.println("Deu certo");
end*/